/* LOGO */
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

/* SEARCH */
.search {
  flex: 0 0 40%;
  display: flex;
  align-items: center;
  justify-content: center;

  &__input {
    /* Input's font does not inherit from parent elements, therefore we must actively inherit */
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: 0.7rem 20rem;
    border-radius: 100px;
    width: 90%;
    transition: all 0.2s;
    margin-right: -3.25rem;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-dark-1);
    }
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      transform: transformy(2px);
    }
  }

  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);
  }
}

/* USER NAVIGATION */
.user-nav {
  display: flex;
  align-items: center;
  /* On top of adjust container's elements properties, you can apply the same on the container itself with the [-self] subfix */
  align-self: stretch;

  /* Only select all its direct children */
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;

    &:hover {
      background-color: var(--color-grey-light-2);
    }
  }

  &__icon-box {
    display: flex;
    align-items: center;
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: var(--color-white);
    position: absolute;
    top: 1.75rem;
    left: 3.5rem;
    /*
      You can use the flex display on top of an absolute positioning
      In this case it has been used to adjust notification's text on center
    */
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user {
    display: flex;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
  }

  /*
    &__user-name {

    }
  */
}

/* SIDE NAVIGATION */
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      /* Same height that its reffered element (__item) */
      height: 100%;
      width: 0.3rem;
      background-color: var(--color-primary);
      transform: scaleY(0);
      /* In [transition] you can set different timings for different properties */
      transition:
        transform 0.2s,
        width 0.4s,
        background-color 0.1s;
    }

    &:hover::before {
      transform: scaleY(1);
      width: 100%;
    }

    &:active::before {
      background-color: var(--color-primary-light);
    }
  }

  &__link {
    &:link,
    &:visited {
      color: var(--color-grey-light-1);
      text-decoration: none;
      text-transform: uppercase;
      padding: 1.5rem 3rem;
      /* [z-index] will work if the element sets its position in the code */
      z-index: 10;
      position: relative;
      display: flex;
      align-items: center;
    }
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    /* {currentColor} uses the color of the current element or its parent */
    fill: currentColor;
  }
}

/* LEGAL */
.legal {
  font-size: 1.2rem;
  text-align: center;
  padding: 2.5rem;
  color: var(--color-grey-light-4);
}

/* GALLERY */
.gallery {
  display: flex;

  &__photo {
    width: 100%;
    display: block;
  }
}

/* HOTEL OVERVIEW */
.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.5rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;
  }

  &__stars {
    /* To move an element in a specific side without increase its size (using [flex: 1]), the best practice is to set the margin we need into {auto} */
    margin-right: auto;
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: var(--color-white);
    margin-left: 3rem;
    padding: 0 2.25rem;
    align-self: stretch;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
  }

  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;
  }
}

/* BUTTON INLIN */
.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit;
  border-bottom: 1px solid currentColor;
  background-color: transparent;
  cursor: pointer;
  transform: all 0.2s;

  &:hover {
    color: var(--color-grey-dark-1);
  }

  &:focus {
    outline: none;
  }
}

/* PARAGRAPH */
.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}

/* LIST */
.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);
  display: flex;
  flex-wrap: wrap;

  &__item {
    /*
      Do not shrink
      Do not expand
      Take only 50% of container's space/width
    */
    flex: 0 0 50%;
    margin-bottom: 0.7rem;

    &::before {
      content: '';
      display: inline-block;
      height: 1.75rem;
      width: 1.75rem;
      margin-right: 0.7rem;
      /* To create a colored version of a svg on css, you must include a mask-image which property will be svg's url */
      background-color: var(--color-primary);
      mask-image: url('../img/chevron-thin-right.svg');
      mask-size: cover;
    }
  }
}

/* RECOMMEND */
.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-3);
  display: flex;
  align-items: center;

  &__count {
    margin-right: auto;
  }

  // &__friends { }

  &__photo {
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid var(--color-white);

    &:not(:last-of-type) {
      margin-right: -1.5rem;
    }
  }
}
