.container {
  max-width: 120rem; /* 1200 px */
  margin: 8rem auto;
  background-color: var(--color-grey-light-2);
  box-shadow: var(--shadow-dark);
  min-height: 50rem;
}

.header {
  font-size: 1.4rem;
  height: 7rem;
  background-color: var(--color-white);
  border-bottom: var(--color-grey-light-1);
  /* To use flex capabilities, first you have to add the [display: flex] statement */
  display: flex;
  /* To add space between a flex container elements, you can use the [justify-content] property */
  justify-content: space-between;
  /* To set elements alignment, you can use the [align-items] property */
  align-items: center;
}

.content {
  display: flex;
}

.sidebar {
  background-color: var(--color-grey-dark-1);
  display: flex;
  /*
    First argument is to avoid expand beyond its max width
    Second argument is to avoid shrink its when it has not reached its max width
    Third argument is to fix its width
  */
  flex: 0 0 18%;
  justify-content: space-between;
  /*
    To adjust [justify-content: space-between] in vertical way, we will have to add [flex-direction] in {column} value
  */
  flex-direction: column;
}

.hotel-view {
  background-color: var(--color-white);
  /* By setting flex's first argument to 1, it will grow as much as it can */
  flex: 1;
}

.detail {
  display: flex;
  padding: 4.5rem;
  background-color: var(--color-grey-light-1);
  border-top: var(--line);
  /* The detail container has its font size setted in 1.4 and its child components will inherit that size (reducing duplicated code) */
  font-size: 1.4rem;
}

.description {
  background-color: var(--color-white);
  padding: 3rem;
  flex: 0 0 60%;
  margin-right: 4.5rem;
  box-shadow: var(--shadow-light);
}

.user-reviews {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
}
