/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Lato, sans-serif;
  font-weight: 400;
  font-size: 16px;
  /* Is 1.7 times the default font size */
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  /* Linear gradient fill be fit before the real background image */
  background-image: linear-gradient(
      to right,
      hsl(111deg, 55%, 64%, 80%),
      hsl(160deg, 64%, 43%, 80%)
    ),
    url('../img/hero.jpg');
  /* Fit the element to screen's width */
  background-size: cover;
  /* Ensure the background will be on page's top */
  background-position: top;
  /*
    On clip-path you set a polygon or shape that will display according the points you indicate
    Using polygon function, you have to mention all x/y coordinates from top-left, top-right, bottom-right and bottom-left
  */
  clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
  position: relative;
}

.logo-box {
  position: absolute;
  /* Uses element's parent as reference to be positioned */
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 45%;
  left: 50%;
  /*
    transform is used to handle certain properties of the element
    translate is the function that will change element's width and height with the number we want.
  */
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  padding-bottom: 20px;
}

.heading-primary-main {
  /* Block elements take all screen's width and create a whitespace */
  display: block;
  font-size: 60px;
  font-weight: 400;
  /* Determines the space between each letter */
  letter-spacing: 35px;
  /* You set the animation for this element */
  animation-name: move-in-left;
  /* And its duration */
  animation-duration: 2s;
  /* The animation will wait 3 seconds before start working */
  /* animation-delay: 2s; */
  /* How many times the animation will happen */
  /* animation-iteration-count: 2; */
  /* You can add all mentioned properties with animation */
  /* animation: move-in-left 1s; */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.5px;
  animation-name: move-in-right;
  animation-duration: 2s;
}

/*
  keyframes, a transition function/logic which you give the animation a name
  then you create the related states of your animation based on its progress (from 0 to 100%)
*/
@keyframes move-in-left {
  0% {
    /* Element must not be visible */
    opacity: 0;
    /* You set the element 100 pixels on inverse X way (from right to left) */
    transform: translateX(-100px);
  }

  60% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    /* you put the element back to position X=0, Y=0 */
    transform: translate(0);
  }
}

/* Different keyframe from left to right */
@keyframes move-in-right {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  60% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/*
  :link is used when an element is an anchor tag (like <a />)
  :visited is used when a link has been clicked before
*/
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  /* All properties are enabled to be animated */
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  /* The Y axis moves from the top to the bottom, the negative value indicates from bottom to top */
  transform: translateY(-3px);
  /* Shadow uses the values for: X axis, Y axis, how blurry you want it and its color */
  box-shadow: 0 10px 20px rgba(0, 0, 0, 20%);
}

/* Active is used when the element is clicked */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 1px rgba(0, 0, 0, 20%);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

/* Pseudo element */
.btn::after {
  /* You need to add the content property to enable pseudo-element with its properties */
  content: '';
  /* Also need to indicate its display property */
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  /* Indicates the element will be behind others */
  z-index: -1;
  transition: all 0.5s;
}

.btn-white::after {
  background-color: #fff;
}

.btn:hover::after {
  /* You can set the scale transformation in both axis using scale only or adjusting with scaleX and scaleY */
  transform: scaleX(1.25) scaleY(1.5);
  /* transform: scale(1.5); */
  opacity: 0;
}

/* Different keyframe from left to right */
@keyframes move-in-button {
  0% {
    opacity: 0;
    transform: translateY(100px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn-animated {
  /*
    Transition third argument is set to handle animation speed at first or at finish
    Its fourth argument is to set a delay before execute the animation
  */
  animation: move-in-button 2s ease-out 0.75s;
  animation-fill-mode: backwards;
}
