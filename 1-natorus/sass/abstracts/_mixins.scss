/* A mixin is a reusable piece of code that can be injected in other selectors */
@mixin clearfix {
  &::after {
    /* This should be a hidden element, therefore its content is "" */
    content: '';
    display: table;
    clear: both;
  }
}

/*
  Having in mind you are working on a desktop-first strategy
  * 0-600px: Phone
  * 600-900px: Tablet in portrait
  * 900-1200px: Tablet in landscape
  * 1200-1800px: Normal styles apply
  * 1800px+: Big desktop
*/

/* To pass the code from the place will be the mixin called, you need to include @content as part of the mixin itself */
@mixin respond-phone {
  @media (max-width: 600px) {
    @content;
  }
}

/*
  For a more advanced way to implement mixings, you can use the [@if] directive
  @if will check if an argument is equal to N value, it will execute the code you have written
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media (max-width: 600px) {
      @content;
    }
  }

  @if $breakpoint == tab-portail {
    @media (max-width: 900px) {
      @content;
    }
  }

  @if $breakpoint == tab-landscape {
    @media (max-width: 1200px) {
      @content;
    }
  }

  @if $breakpoint == big-desktop {
    @media (max-width: 1800px) {
      @content;
    }
  }
}
