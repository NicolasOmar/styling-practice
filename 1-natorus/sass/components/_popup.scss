.popup {
  background-color: rgba($color-black, 0.8);
  width: 100vw;
  height: 100vh;
  z-index: 4000;
  position: fixed;
  top: 0;
  left: 0;
  /* Usind [display: none] will disable element's animations */
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s;

  /* When you click in a target element (by its id), you will add some css */
  &:target {
    opacity: 1;
    visibility: visible;
  }

  &__content {
    background-color: $color-white;
    width: 80vw;
    box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* [display: table] will help to avoid using float and set element's children size and position in a easier way */
    display: table;
    overflow: hidden;
  }

  &__left {
    width: 33.3333%;
    /*
      [display: table-cell] will give the element a place inside its parent element, a display: table
      By using table-cell, you can set element's width as you preffer and it will display in the order is coded on its html
    */
    display: table-cell;
    /*
      To solve some height issues (when a sibiling as more or less that this element), you can set its [vertical-align] based on parent's height
      Is important to mention that element should be displayed as {table-cell}
    */
    vertical-align: middle;
  }

  &__right {
    width: 66.6667%;
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem;
  }

  &__img {
    display: block;
    width: 100%;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    /*
      In case you want to show a text by columns (in a balanced way), you can make use of column properties
      [column-count] will set in how many columns your text will be displayed
      [column-gap] will create a gap between those columns
      And [column-rule] will generate a rule to make the separation more visually
    */
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid $color-grey-light;
  }

  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      transition: all 0.2s;
    }

    &:hover {
      color: $color-primary;
    }
  }
}
