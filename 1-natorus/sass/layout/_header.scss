.header {
  height: 95vh;
  /* Linear gradient fill be fit before the real background image */
  background-image: linear-gradient(
      to right,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url('../img/hero-small.jpg');
  /* Fit the element to screen's width */
  background-size: cover;
  /* Ensure the background will be on page's top */
  background-position: top;
  /*
    On clip-path you set a polygon or shape that will display according the points you indicate
    Using polygon function, you have to mention all x/y coordinates from top-left, top-right, bottom-right and bottom-left
  */
  clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
  position: relative;

  /*
    A way to integrate responsive images in CSS is using multiple @media comparissons
    In this case, if the browser has a minimun resolution of X and a minimun width of Y, it will be rendered a bigger image (with more definition)
  */
  @media (min-resolution: 192dpi) and (min-width: 37.5em), (min-width: 125em) {
    background-image: linear-gradient(
        to right,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)
      ),
      url('../img/hero.jpg');
  }

  @include respond(phone) {
    clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    /* Uses element's parent as reference to be positioned */
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 45%;
    left: 50%;
    /*
      transform is used to handle certain properties of the element
      translate is the function that will change element's width and height with the number we want.
    */
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
