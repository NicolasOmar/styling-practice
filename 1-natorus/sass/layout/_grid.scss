.row {
  /* [max-width] takes all screen's width but limited to the value, in case the screen is bigger, the element will only take up to its setted value */
  max-width: $grid-width;
  /* How to center a block element in another block element */
  margin: 0 auto;

  /*
    [:not] is to specify a negation of X expression
    in this case, it should not be last child
  */
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-portail) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-portail) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  /*
    this mixin has been created to solve a styling problem from float elements
    if you have any element which is float, its parent's margins will be reseted to 0
    to solve this situation, you should add a [clear: both;] property/value pair
  */
  @include clearfix;

  /*
    A selector attribute grabs any html-property to select between brackets
    After you add the selector, include the equalizer you need, in this case [^=] means all which starts with the following text
  */
  [class^='col-'] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-portail) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    @include respond(tab-portail) {
      width: 100% !important;
      margin-right: 0;
    }
  }

  .col-1-of-2 {
    /*
      In order to set an element width having in mind one or several calculations, we use calc
      On the calc function, SASS variables have to been called in notation #{SASS_VARIABLE} to execute the calculation
    */
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
